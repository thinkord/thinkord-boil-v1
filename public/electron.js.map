{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./main/electron.ts","webpack:///./node_modules/electron-is-dev/index.js","webpack:///./service/index.ts","webpack:///external \"electron\"","webpack:///external \"path\""],"names":["win","createWindow","BrowserWindow","width","height","webPreferences","nodeIntegration","contextIsolation","preload","path","__dirname","register","loadURL","isDev","once","show","on","app","ipcMain","event","data","console","log","reply"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA,IAAIA,GAAJ;;AACA,SAASC,YAAT,GAAwB;AACpB;AACAD,KAAG,GAAG,IAAIE,sDAAJ,CAAkB;AACpBC,SAAK,EAAE,GADa;AAEpBC,UAAM,EAAE,GAFY;AAGpBC,kBAAc,EAAE;AACZC,qBAAe,EAAE,IADL;AAEZ;AACAC,sBAAgB,EAAE,IAHN;AAIZC,aAAO,EAAEC,4CAAA,CAAaC,SAAb,EAAwB,YAAxB;AAJG;AAHI,GAAlB,CAAN;AAUAC,iEAAQ,GAZY,CAapB;;AACAX,KAAG,CAACY,OAAJ,CAAYC,sDAAK,GAAG,uBAAH,oBAAuCJ,yCAAA,CAAUC,SAAV,EAAqB,qBAArB,CAAvC,CAAjB;AACAV,KAAG,CAACc,IAAJ,CAAS,eAAT,EAA0B,YAAM;AAC5Bd,OAAG,CAACe,IAAJ;AACH,GAFD;AAGAf,KAAG,CAACgB,EAAJ,CAAO,QAAP,EAAiB,YAAM;AACnBhB,OAAG,GAAG,IAAN;AACH,GAFD;AAGH;;AAEDiB,4CAAG,CAACD,EAAJ,CAAO,OAAP,EAAgBf,YAAhB,E;;;;;;;;;;;;AC9Ba;AACb,iBAAiB,mBAAO,CAAC,0BAAU;;AAEnC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAIO,SAASU,QAAT,GAAoB;AACvBO,kDAAO,CAACF,EAAR,CAAW,OAAX,EAAoB,UAACG,KAAD,EAAQC,IAAR,EAAiB;AACjCC,WAAO,CAACC,GAAR,CAAYF,IAAZ;AACAD,SAAK,CAACI,KAAN,CAAY,OAAZ,EAAqB,OAArB;AACH,GAHD;AAIH,C;;;;;;;;;;;ACTD,qC;;;;;;;;;;;ACAA,iC","file":"electron.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./main/electron.ts\");\n","import { app, BrowserWindow, ipcMain } from 'electron';\r\nimport isDev from 'electron-is-dev'\r\nimport * as path from 'path';\r\nimport { register } from '../service/index'\r\n\r\n\r\nlet win: BrowserWindow | null\r\nfunction createWindow() {\r\n    // Create the browser window.\r\n    win = new BrowserWindow({\r\n        width: 800,\r\n        height: 600,\r\n        webPreferences: {\r\n            nodeIntegration: true,\r\n            // enableRemoteModule: true,\r\n            contextIsolation: true,\r\n            preload: path.resolve(__dirname, 'preload.js')\r\n        }\r\n    });\r\n    register()\r\n    // and load the index.html of the app.\r\n    win.loadURL(isDev ? \"http://localhost:3000\" : `file://${path.join(__dirname, '../build/index.html')}`)\r\n    win.once('ready-to-show', () => {\r\n        win.show()\r\n    })\r\n    win.on('closed', () => {\r\n        win = null\r\n    })\r\n}\r\n\r\napp.on('ready', createWindow);\r\n\r\n","'use strict';\nconst electron = require('electron');\n\nif (typeof electron === 'string') {\n\tthrow new TypeError('Not running in an Electron environment!');\n}\n\nconst app = electron.app || electron.remote.app;\n\nconst isEnvSet = 'ELECTRON_IS_DEV' in process.env;\nconst getFromEnv = parseInt(process.env.ELECTRON_IS_DEV, 10) === 1;\n\nmodule.exports = isEnvSet ? getFromEnv : !app.isPackaged;\n","import { ipcMain } from 'electron'\r\n\r\n\r\n\r\nexport function register() {\r\n    ipcMain.on('hello', (event, data) => {\r\n        console.log(data)\r\n        event.reply('world', 'hello')\r\n    })\r\n}\r\n","module.exports = require(\"electron\");","module.exports = require(\"path\");"],"sourceRoot":""}